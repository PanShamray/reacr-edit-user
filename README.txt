1. Додавання вихідних даних(src/data.js):
    - країни;
    - департаменти;
    - статуси;
    - користувачі.

2. Реалізовано можливісь переходу між сторінками за допомогою React-router.

3. Розробка дизайну сторінки Edit User.

4. СТОРІНКА Edit User:
    - підключення пакету react-select, для можливості зручно користуватися multiselect;
    - підключення вихідних даних до компоненту EditUser;
    - встановлення стану компонента;
    - додавання прослуховувачів подій handleUserSelect(вибір користувача зі списку),
    handleUserNameChange(зміна імені), handleSelectChange(зміна даних у самих селекторах), handleUndo(скидання до початкових значень),
    handleSave(збереження змінених даних);
    - використання пакету react-select за допомогою тегу <Select/>, була відредагована стилізація кожного блоку <Select/>,
    у відповідності до заданого макету фігми;
    - створено можливість змінбвати дані інпуту Імені, дані в селекторах Department, Country та Status;
    - при зміні даних реалізовано можливість скинути та зберегти дані;
    - кнопку Undo, по-дефолту, не видно, зʼявляється тільки тоді, коли ми щось змінюємо; 
      Коли натискаємо на неї - дані скидаються як були до змін; 
    - кнопка Save стає активною коли дані змінені і є, що зберігати;
    - адаптація style.scss, для уникнення дублювання стилів і покращення читабельності.

5. Розробка дизайну сторінки Users.

6. СТОРІНКА USERS:
    - підключення пакету react-select, для можливості зручно користуватися multiselect;
    - підключення вихідних даних до сторінки Users;
    - встановлення станів компонента(вибір департаментів, вибір статусу, вибір країни,
      список юзерів, попап);
    - створено перевірку на вибір трьох обов'язкових депертаментів у селекторі;
    - handleDepartmentChange - поки не вибрано 3 департаменти інші селектори деактивовані;
    - handleStatusChange, handleCountryChange - якщо обрано 3 департаметни, є можливіть обрати option у селекторі country та status;
    - resetFilters - додано смітничок, при натиску якого скидаються всі селектори до дефолтного значення;
    - handleUserDelete - смітничок біля юзер-айтема у списку видаляє юзера;
    - openAddUserModal, closeAddUserModal - створено логіку відеривання/закривання попапу, але не реалізовано;
    - підгонка верстки під розміри зазначені у макеті фігма;
    - оптимізація SCSS коду, для кращого читання та підтримки.

7. Add users попап:
    - створення верстки попапу;
    - підключення вихідних даних для селекторів;
    - створення useState для імені, департаменту, країни, статусу та для обробника помилок;
    - створення валідації, щоб унеможливити додавання "пустого" користувача;
    - handleAddUser - якщо пройшли валідацію, то новий юзер додається до масиву юзерів;
    - кнопка Add додає юзера, Close - закриває попап;
    - якщо не пройшли валідацію, реалізовано додавання спеціальних класів стилів, які показують, що ці данні обов'язкові до заповнення.

8. Фікс багів:
    - додавання максимальної ширни до контейнерів для запобігання розшинення;
    - фікс появлення AddUserModal;
    - фікс ширини рядків таблиці, при видаленні елементів;
    - 